html
  head
  link(rel='stylesheet', href='/static/templatestyle.css', type='text/css' )
  a(href='/')

  
body
    
  a(href='http://kruncher.cmmt.ubc.ca:8880/dbaccess/') 
    #header
      h1 Kobor Lab Epigenetics Database - Query
  
  #wrapper
    form(name="main", action='/dbaccess/query_form/', method='post')
      input(type="hidden", id="width", name="width", value = "")
      input(type="hidden", id="height", name="height", value = "")
      input(type="hidden", id="sample_index", name="sample_index", value = sample_index)
      input(type="hidden", id="types_index", name="types_index", value = types_index)
      input(type="hidden", id="methylation_avail", name="methylation_avail", value=methylation_list)
      input(type="hidden", id="chipseq_avail", name="chipseq_avail", value=chipseq_list)
      input(type="hidden", id="organism_inuse", name="organism_inuse", value=organism)
      input(type="hidden", id="methylation_selected", name="methylation_selected", value=methylation_project)
      input(type="hidden", id="chipseq_selected", name="chipseq_selected", value=chipseq_project)
      
      script(type='text/javascript')
        document.getElementById('width').value = window.innerWidth;
        document.getElementById('height').value = window.innerHeight;
      div(align='center')
        fieldset
          label(for='organism') Organism:
            select(name='organism', id='organism', onchange='update_data_by_org()')
              - each org in organism_list
                - if org == organism
                  option(value=org, selected)=org
                - else 
                  option(value=org)=org
          label(for='collection', id='collection_label') Collection:
            - if collection_list
              - var col = collection_list.items()
              select(name='collection',id='collection', onchange='update_view()')
                - for x,y in col
                  - if x == collection
                    option(value=x, selected)=y
                  - else
                    option(value=x)=y
          label(for='methylation', id='methylation_label') Methylation Set:
            select(name='methylation', id='methylation', multiple="multiple")
              - var mo = methylation_list[organism]
              - each mt in mo
                - if mt == methylation_project
                  option(value=mt, selected)=mt
                - else 
                  option(value=mt)=mt
          label(for='chipseq', id='chipseq_label') Chip-Seq:
            select(name='chipseq', id='chipseq', multiple)
              - var cso = chipseq_list[organism]
              - each cs in cso
                - if cs == chipseq_project
                  option(value=cs, selected)=cs
                - else
                  option(value=cs)=cs
          label(for='chromosome') Chromosome:
            if chromosome
              input(id='chromosome',size = '6', type='text', name='chromosome', value = chromosome)
            else
              input(id='chromosome',size = '6', type='text', value='',placeholder='1,2,...X,Y', name='chromosome')
          label(for='start') Start:
            if start
              input(id='start',size = '8', type='text', value=start,name='start')
            else 
              input(id='start',size = '8', type='text', value='',name='start')
          label(for='end') End:
            if end
              input(id='end', size = '8', type='text', value=end, name='end')
            else
              input(id='end', size = '8', type='text', value='', name='end')
          input(type='submit',value='Query!', class ="bigbutton")
      #zoompan
        #selection_element
          input(type='button',value = '<<<', title="Pan left 60%", name='MoreLeft', onClick="window.open(newURL('MoreLeft'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '<<',title="Pan left 30%", name='LessLeft', onClick="window.open(newURL('LessLeft'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '--', title="Zoom Out x3", name='ZoomOutMore', onClick="window.open(newURL('ZoomOutMore'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '-',title='Zoom Out x1.5', name='ZoomOut', onClick="window.open(newURL('ZoomOut'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '+',title='Zoom In x1.5', name='ZoomIn', onClick="window.open(newURL('ZoomIn'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '++',title='Zoom In x3', name='ZoomInMore', onClick="window.open(newURL('ZoomInMore'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '>>', title="Pan right 30%", name='LessRight', onClick="window.open(newURL('LessRight'),'_self');", class = "medbutton")
        #selection_element
          input(type='button',value = '>>>', title="Pan right 60%", name='MoreRight', onClick="window.open(newURL('MoreRight'),'_self');", class = "medbutton")
      #option_elements
        if organism == 'human'
          #selection_element
            label(for='tss') Tss:
              if tss
                input(id='tss', size = '8', type='checkbox', name="tss", checked)
              else
                input(id='tss', size = '8', type='checkbox', name="tss")
          #selection_element
            label(for='cpg') CpG Islands:
              if cpg
                input(id='cpg', size = '8', type='checkbox', name="cpg", checked)
              else
                input(id='cpg', size = '8', type='checkbox', name="cpg")
        if collection = 'chipseq' or collection = 'methchip'
          label(for='minheight') Minimum peak height:
            if minheight
              input(id='minheight',size = '4', type='text', name='minheight', value = minheight)
            else
              input(id='minheight',size = '4', type='text', value='0', name='minheight')
        else
          input(type="hidden", id="minheight", name="minheight", value = '0')
        if collection = 'methylation' or collection = "methchip"
          #selection_element
            label(for='datapoints') Show data points:
              if datapoints
                input(id='datapoints', size = '8', type='checkbox', name="datapoints", checked)
              else
                input(id='datapoints', size = '8', type='checkbox', name="datapoints")
          #selection_element
            label(for='show_dist') Show sample type distribution:
              if show_dist
                input(id='show_dist', size = '8', type='checkbox', name="show_dist", checked)
              else
                input(id='show_dist', size = '8', type='checkbox', name="show_dist")
    #left
       |!{plot}
    #right
      - var meth_sel = methylation_project
      h3 Group Index
      - if types_index.items
        - var samples = types_index.items()
        - var t = samples.sort()
        - for k, v in samples
          - if k in meth_sel
            font(color=v)
              !{k}
            br  
      - else 
        | No Data Found                   
      h3 Sample Index
      - if sample_index.items
        - var samples = sample_index.items()
        - var t = samples.sort()
        - for k,v in samples
          - var pro = k.split("-")[0];
          - if pro in meth_sel
            font(color=v)
              !{k}
            br 
      - else 
        | No Data Found

script(type='text/javascript')
    function getselected(selectobject) {
        var results = [];
        for (var i=0; i<selectobject.options.length; i++) {
          if (selectobject.options[i].selected) {
            var option = selectobject.options[i];
            var value = option.value;
            results.push(value);
          }
        }
        return results;
    }
    

    function update_data_by_org() {
      organism_inuse.value = document.getElementById("organism").value
      var e = document.getElementById("methylation");
      e.options.length=0;
      var mo = JSON.parse(methylation_avail.value.replace(/'/g, '"'));
      var zzz = mo[organism_inuse.value];
      var meth_sel = methylation_selected.value;
      i = 0;
      for (pro in zzz) {
        if (meth_sel.indexOf(zzz[pro]) >= 0) { 
          document.getElementById("methylation").options[i]=new Option(zzz[pro], zzz[pro], false, true);
        } else { 
          document.getElementById("methylation").options[i]=new Option(zzz[pro], zzz[pro], false, false);
        }
        i++;
      }
      
      var e = document.getElementById("chipseq")
      e.options.length=0;
      var cso = JSON.parse(chipseq_avail.value.replace(/'/g, '"'));
      var zzz = cso[organism_inuse.value];
      var cs_sel = chipseq_selected.value;
      i = 0;
      for (pro in zzz) {
        if (cs_sel.indexOf(zzz[pro]) >= 0) { 
          document.getElementById("chipseq").options[i]=new Option(zzz[pro], zzz[pro], false, true);
        } else { 
          document.getElementById("chipseq").options[i]=new Option(zzz[pro], zzz[pro], false, false);
        }
        i++;
      }
      
    }

    function update_view(){
      var e = document.getElementById("collection");

      if (e.value == "methchip") {
        document.getElementById("methylation").style.display='';
        document.getElementById("chipseq").style.display='';
        document.getElementById("methylation_label").style.display='';
        document.getElementById("chipseq_label").style.display='';
      }
      if (e.value == "methylation") {
        document.getElementById("methylation").style.display='';
        document.getElementById("methylation_label").style.display='';
        document.getElementById("chipseq").style.display='none';
        document.getElementById("chipseq_label").style.display='none';
      }
      if (e.value == "chipseq") {
        document.getElementById("methylation").style.display='none';
        document.getElementById("methylation_label").style.display='none';
        document.getElementById("chipseq").style.display='';
        document.getElementById("chipseq_label").style.display='';
      }
    
    }
    

    
    function newURL(action){  
      var base = '/dbaccess/query_form/';
      var e = document.getElementById("organism");
      var organism = e.options[e.selectedIndex].value;
      var e = document.getElementById("collection");
      var collection = e.options[e.selectedIndex].value;
      var e = document.getElementById("methylation");
      var methylation = getselected(e)
      var e = document.getElementById("minheight");
      if (e) {
        var minheight = e.value;
      }
      var e = document.getElementById("tss");
      if (e) {
        var tss = e.checked;
      }
      var e = document.getElementById("cpg");
      if (e) {
        var cpg = e.checked;
      }
      var e = document.getElementById("datapoints");
      if (e) {
        var datapoints = e.checked;
      }
      var e = document.getElementById("show_dist");
      if (e) {
        var show_dist = e.checked;
      }
      
      base += "?chromosome=" + chromosome.value
      base += "&start=" + start.value
      base += "&end=" + end.value
      base += "&organism=" + organism
      base += "&collection=" + collection
      base += "&methylation=" + methylation.split(",")
      base += "&action=" + action
      if (minheight) {
        base += "&minheight=" + minheight
      }
      if (tss) {
        base += "&tss=" + tss
      }
      if (cpg) {
        base += "&cpg=" + cpg
      }
      if (datapoints) {
        base += "&datapoints=" + datapoints
      }
      if (show_dist) {
        base += "&show_dist=" + show_dist
      }
      base += "&width=" + window.innerWidth
      base += "&height=" + window.innerHeight
      base += "&types_index=" + encodeURIComponent(document.forms.main.types_index.value)
      base += "&sample_index=" + encodeURIComponent(document.forms.main.sample_index.value)
      
      return base
    }
    
        
    //run the scripts to set the initial view.
    update_view();
    update_data_by_org();
    
    
