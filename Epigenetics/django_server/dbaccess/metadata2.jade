extends base

block title
    h1 Epigenetics Database - View/Edit Meta Data

block content
  #padding-div 
    h2 MetaData: Select a project to edit.
    form(name="main", id="main", action='/dbaccess/metadata3/', method='post')
      input(type="hidden", id="samples", name="samples", value=samples)
      input(type="hidden", id="collection", name="collection", value=collection)
      input(type="hidden", id="project", name="project", value=project)   
      input(type="hidden", id="organism", name="organism", value=organism)
      input(type="hidden", id="groups", name="groups", value=groups)
      | Editing !{collection} sample - !{project}
      br
      if collection == 'chipseq'
        - var disabledfields = {"_id", "min_height", "number_waves", "map_type", "input_file", "default_database", "file_name", "round_leading_edge", "port", "triangle_median", "server", "fragment_length", "max_pet_length", "haswaves", "output_path", "triangle_min", "sample_id", "hide", "make_wig", "processor_threads"}
        - each s in samples
          - var sam = s.items()
          table(id='tab')
            - each k,v in sam
                tr
                  td
                    | !{k}:
                  td
                    if k in disabledfields 
                      input(type="text",name=k, value=v, disabled)
                    else
                      input(type="text",name=k, value=v)
            br
      if collection == 'methylation'
        if samples
          select(name='sample', id='sample', onChange='populate_methylation_table()')
            - each s,i in samples
              if i == 0
                option(value=s['sampleid'], selected)=s.sampleid
              else
                option(value=s['sampleid'])=s.sampleid
            option(value="all")="All Samples"
          table(id='tab')
        br
        
        
      input(type="button", value="Add a new key/value", onClick='addnewtag()')
      input(type='submit', value = 'Save Edits', title="Save Edits", name='Save Edits', class ="bigbutton")
      input(type="button", value="Back", onClick="window.history.back(-1)")

block script    
  script(type='text/javascript')
    window.onload = function() {
      if (collection.value == 'methylation') {
        populate_methylation_table();
      }
    }
    
    
    function populate_methylation_table() {
      var container = document.getElementById("tab");
      container.innerHTML = "";
      var e = document.getElementById("sample");
      var sample_num = e.options[e.selectedIndex].index;
      var samp = JSON.parse(samples.value.replace(/'/g, '"'))
      var sam = samp[sample_num]
      var row = container.insertRow(0);
      var rowcount = 1
      var cell = row.insertCell(0);
      cell.appendChild(document.createTextNode("Field"));
      cell = row.insertCell(1);
      cell.appendChild(document.createTextNode("Value"));
      cell = row.insertCell(2);
      cell.appendChild(document.createTextNode("Group By"));
      
      
      
      for (s in sam) {
        var row = container.insertRow(rowcount);
        var cell1 = row.insertCell(0);
        cell1.appendChild(document.createTextNode(s));
        var cell2 = row.insertCell(1);
        var input = document.createElement("input");
        input.type = "text";
        input.name = s;
        input.value = sam[s]
        input.disabled = true;
        cell2.appendChild(input);
        var cell3 = row.insertCell(2);
        var x = document.createElement('input');
        x.type = "checkbox";

        x.name = s + "_checkbox";
        if (groups.value.indexOf(s) > -1) {
          x.checked = "true";
        }
        cell3.appendChild(x);
        rowcount +=1;
     }
    }
    
    
    function addnewtag(){
      var container = document.getElementById("tab");
      var rowcount = container.rows.length;
      var row = container.insertRow(rowcount);

      var cell1 = row.insertCell(0);
      var tag = document.createElement("input");
      tag.type = "text";
      tag.name = "label"  + rowcount;
      cell1.appendChild(tag);
      
      var cell2 = row.insertCell(1);
      var input = document.createElement("input");
      input.type = "text";
      input.name = "value" + rowcount;
      cell2.appendChild(input);
      
      var container = document.getElementById("main");
    }